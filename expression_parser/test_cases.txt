#<text expression>, <value type>, <result>, [template symbol], [template value]

# only double numbers are supported

#functions

#Math.log2(Math.log(0)), double, -inf
Math.log2(Math.log(0)), exception

Math.log2(log10(45)), double, 0.7252721892
Math.log10(Math.log2(Math.log(123456))), double, 0.5503933144
log2(100), double, 6.64385619
Math.log(Math.log(0)), exception
Math.log10(Math.log(0)), exception

log(0), double, -inf
log10(0), double, -inf
log2(0), double, -inf

log(100), double, 4.605170186
log10(100), double, 2
log2(100), double, 6.64385619
log2(log10(45)), double, 0.7252721892
log10(log2(log(123456))), double, 0.5503933144


# numeric literals
15,double,15
000007, double,7

# hex literals
0XCD,double, 205
0xa + 5, double, 15
0XC4B * (6-2),double, 12588

#double literals
199.78, double, 199.78
000748.3,  double, 748.3

#Unary operators
-++++34.7, double,  -34.7


# Simple operations
14 + 21 - 55 + 255.0,  double, 235
1.0/3, double, 0.33333333333

# expressions with brackets
2 + ((28567*3.0+4) / 28657), double, 4.9907178

# modulus operations
8%3, double, 2
9%3, double, 0


100%30, double, 10
100%30.0, double, 10.0

6543.21%137, double, 104.21
6543.21%137.24, double, 92.9299999999996

6.0%3.2, double, 2.8
-6.0%3.2, double, 0.4
-6.0%-3.2, double, -2.8
6.0%-3.2, double, -0.4

12.2%4.5, double, 3.2
-12.2%4.5, double, 1.3
-12.2%-4.5, double, -3.2
12.2%-4.5, double, -1.3

5.0%0, exception

# boolean expressions

# Greater
6>3, bool, true
2>10, bool, false

# Less
6.7 < 2.4 , bool, false
3 < 88, bool, true
1<(4 + 1), bool, true

# GreaterOrEqual
5>=8, bool, false
8>=8, bool, true
10>=7, bool, true

# LessOrEqual
12<=21, bool, true
33<=33, bool, true
35<=31, bool, false

# Equal
33==44, bool, false
14==14, bool, true

# NotEqual
45!=34, bool, true
12!=12, bool, false

# power expressions

3**5, double, 243
5**-1, double, 0.2

# ternary operations
1 < 10 ? 5 : 128, double, 5

4+51<(6 + 1)?6:144, double, 144
10 < 7 ? 4>8 ? 2:99 : 1<(4 + 9)? 5*2.0: 456, double, 10

# templates
9%%d, double, 0, d, 3
10 < %d ? 4>8 ? 2:99 : 1<(4 + 9)? 5*2.0: 456, double, 10, d , 7

# negative template values
2.0**%d+3, double, 3.25 , d, -2

# no template
3+5*3, double, 18, d, 1
1/3*3, double, 1


# errors: <text expression>, <exception>

(), exception
abc, exception
2+a, exception
3+, exception
*, exception
0.1456.0, exception
7 * * 3, exception
0.1346324.55, exception
10/0, exception

8 + * 2, exception
-8 %, exception

0x0000.2, exception
(5>2)+7, exception
(5>3)*3, exception
8 > 7 ? 11 | 12, exception
, exception
3%, exception
3+4-0x, exception
3*, exception
1/%d , exception



# negative values
5 * (%d + -32767) /32767, double,-4.9989318522, d,  7
5 * (%d + -32767) /32767, double, -5.0010681478, d, -7
-5 * (%d + -32767) /32767,double, 5.0010681478, d,  -7
-5 * (%d + -32767) /-32767, double, -5.0010681478, d, -7


# hexadecimal
%d + 0xDEAD - 0xbeef,double, 8128, d, 2
%d * 0xDEAD / 0xbeef,double, 2.3324945273, d, 2


# invalid
%d dogfishcat, exception
3 + * / = <, exception
3 $ 2, exception
4 + 2 */ 3, exception
5 + 3 /, exception
* 4, exception
5 < 3 ? 16/4 2 > 1 ? 5 : 6, exception
3 < 4 18/3 : 2 > 1 ? 5 : 6, exception
2 <= 2 ? 7 : : 11, exception
3 <= 2 ? 7 : * 11, exception
4 <= *2 ? 7 : 11, exception

0xAA & 0xC, exception
0xBB | 0xB, exception
0xCCC ^ 0xC, exception


~0xA, exception
~0xAA, exception
